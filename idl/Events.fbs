namespace Net;

table Vector2 {
    x: float;
    y: float;
}

table Vector3 {
    x: float;
    y: float;
    z: float;
}

table Vector4 {
    x: float;
    y: float;
    z: float;
    w: float;
}

table Transform {
    translation: Vector3;
    scale: Vector3;
    quaternion: Vector4;
}

table Attribute {
    name: string;
    value: float;
    max: float;
}

table SyncAttributeComponent {
    netId: uint;
    attributes: [Attribute];
}

table SyncTransform {
    transform: Transform;
    netId: uint;
}

table OnPlayerJoined {
    netId: uint;
    transform: Transform;
}

table PlayerSpawn {
    netId: int;
    location: Transform;
}

table OnConnectionResponse {
    self: PlayerSpawn;
    others: [PlayerSpawn];
}

table OnConnection {
    secret: string;
}

table OnMoveTo {
    netId: uint;
    pos: Vector2;
}

table SyncCharacterAnimState
{
    netId: uint;
    state: int;
}

table TriggerAbility
{
    netId: uint;
    abilityId: uint;
    targetVec: Vector3;
}

table SpawnProjectile
{
    netid: uint;
    porjectileId: uint;
    position: Vector2;
    direction: Vector2;
    speed: float;
    lifetime: float;
}

table SpawnEntity
{
    netid: uint;
    entityType: uint;
    location: Transform;
}

union Events {
    OnConnectionResponse,
    OnConnection,
    OnMoveTo,
    SyncTransform,
    OnPlayerJoined,
    SyncAttributeComponent,
    SyncCharacterAnimState,
    TriggerAbility,
    SpawnProjectile,
    SpawnEntity
}

table Header {
    Timestamp: long;
    Event: Events;
}

root_type Header;